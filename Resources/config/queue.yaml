parameters:
  bdf_queue.destinations: []
  bdf_queue.connections: []
  bdf_queue.connection_names: []
  bdf_queue.default_connection: ''
  bdf_queue.connection_definition_id: 'bdf_queue.connection_definition.%s'
  bdf_queue.failer_dsn: 'memory:'

services:
  # Destination
  bdf_queue.destination_manager:
    alias: 'Bdf\Queue\Destination\DestinationManager'
    public: true

  Bdf\Queue\Destination\DestinationManager:
    public: true
    class: 'Bdf\Queue\Destination\DestinationManager'
    arguments: ['@bdf_queue.connection_factory', '@bdf_queue.destination_factory']

  Bdf\Queue\Destination\DsnDestinationFactory:
    class: 'Bdf\Queue\Destination\DsnDestinationFactory'
    arguments: ['@bdf_queue.connection_factory']

  Bdf\Queue\Destination\ConfigurationDestinationFactory:
    class: 'Bdf\Queue\Destination\ConfigurationDestinationFactory'
    arguments: ['%bdf_queue.destinations%', '@Bdf\Queue\Destination\DsnDestinationFactory']

  bdf_queue.destination_factory:
    alias: 'Bdf\Queue\Destination\DestinationFactoryInterface'

  Bdf\Queue\Destination\DestinationFactoryInterface:
    alias: 'Bdf\Queue\Destination\CachedDestinationFactory'

  Bdf\Queue\Destination\CachedDestinationFactory:
    class: 'Bdf\Queue\Destination\CachedDestinationFactory'
    arguments: ['@Bdf\Queue\Destination\ConfigurationDestinationFactory']


  #Connection factory
  bdf_queue.connection_factory:
    alias: 'Bdf\Queue\Connection\Factory\ConnectionDriverFactoryInterface'

  Bdf\Queue\Connection\Factory\ConnectionDriverFactoryInterface:
    alias: 'Bdf\QueueBundle\ConnectionFactory\ConnectionDriverFactory'

  Bdf\QueueBundle\ConnectionFactory\ConnectionDriverFactory:
    class: 'Bdf\QueueBundle\ConnectionFactory\ConnectionDriverFactory'
    arguments:
      - '@service_container'
      - '%bdf_queue.default_connection%'
      - '%bdf_queue.connection_names%'
      - '%bdf_queue.connection_definition_id%'

  Bdf\QueueBundle\ConnectionFactory\Configuration:
    class: 'Bdf\QueueBundle\ConnectionFactory\Configuration'

  Bdf\QueueBundle\ConnectionFactory\PrimeConnectionFactory:
    class: 'Bdf\QueueBundle\ConnectionFactory\PrimeConnectionFactory'
    arguments:
      - '@service_container'
    tags:
      - { name: 'bdf_queue.driver_configurator' }


  #Serializer
  bdf_queue.serializer.native:
    class: 'Bdf\Queue\Serializer\Serializer'

  bdf_queue.serializer.bdf:
    class: 'Bdf\Queue\Serializer\BdfSerializer'
    arguments: ['@?bdf_serializer']

  bdf_queue.serializer.bdf_json:
    class: 'Bdf\Queue\Serializer\BdfSerializer'
    arguments:
      - '@?bdf_serializer'
      - 'json'
      - [include_type: false, remove_default_value: false]


  #Consumer
  bdf_queue.receiver.factory:
    alias: 'Bdf\Queue\Consumer\Receiver\Builder\ReceiverFactory'

  Bdf\Queue\Consumer\Receiver\Builder\ReceiverFactory:
    class: 'Bdf\Queue\Consumer\Receiver\Builder\ReceiverFactory'
    arguments: ['@service_container', '@bdf_queue.instantiator']

  bdf_queue.receiver.loader:
    alias: 'Bdf\Queue\Consumer\Receiver\Builder\ReceiverLoaderInterface'

  Bdf\Queue\Consumer\Receiver\Builder\ReceiverLoaderInterface:
    alias: 'Bdf\QueueBundle\Consumption\ReceiverLoader'

  Bdf\Queue\Consumer\Receiver\Builder\ReceiverLoader:
    alias: 'Bdf\QueueBundle\Consumption\ReceiverLoader'

  Bdf\QueueBundle\Consumption\ReceiverLoader:
    class: 'Bdf\QueueBundle\Consumption\ReceiverLoader'
    arguments:
      - '@service_container'
      - []
      - '@Bdf\Queue\Consumer\Receiver\Builder\ReceiverFactory'


  #Instantiator
  bdf_queue.instantiator:
    alias: 'Bdf\Instantiator\Instantiator'

  Bdf\Instantiator\InstantiatorInterface:
    public: true
    alias: 'Bdf\Instantiator\Instantiator'

  Bdf\Instantiator\Instantiator:
    public: true
    class: 'Bdf\Instantiator\Instantiator'
    arguments: ['@service_container']


  # Failer
  bdf_queue.failer:
    alias: 'Bdf\Queue\Failer\FailedJobRepositoryInterface'

  Bdf\Queue\Failer\MemoryFailedJobStorage:
    class: 'Bdf\Queue\Failer\MemoryFailedJobStorage'
    deprecated: 'The "%service_id%" service is deprecated since bdf-queue 1.1, use "Bdf\Queue\Failer\FailedJobRepositoryInterface" instead'

  Bdf\Queue\Failer\FailedJobRepositoryInterface:
    alias: 'Bdf\Queue\Failer\MemoryFailedJobRepository'

  Bdf\Queue\Failer\MemoryFailedJobRepository:
    class: 'Bdf\Queue\Failer\MemoryFailedJobRepository'

  Bdf\QueueBundle\DependencyInjection\Failer\MemoryFailerDriverConfigurator:
    tags: ['bdf_queue.failer.driver_configurator']

  Bdf\QueueBundle\DependencyInjection\Failer\PrimeFailerDriverConfigurator:
    tags: ['bdf_queue.failer.driver_configurator']

  # Commands
  bdf_queue.failer.show_command:
    class: 'Bdf\Queue\Console\Command\Failer\ShowCommand'
    arguments:
      - '@bdf_queue.failer'
    tags:
      - { name: 'console.command' }

  bdf_queue.failer.flush_command:
    class: 'Bdf\Queue\Console\Command\Failer\FlushCommand'
    deprecated: 'The "%service_id%" service is deprecated since bdf-queue 1.1, use "Bdf\Queue\Console\Command\Failer\DeleteCommand" instead'
    arguments:
      - '@bdf_queue.failer'
    tags:
      - { name: 'console.command' }

  bdf_queue.failer.forget_command:
    class: 'Bdf\Queue\Console\Command\Failer\ForgetCommand'
    deprecated: 'The "%service_id%" service is deprecated since bdf-queue 1.1, use "Bdf\Queue\Console\Command\Failer\DeleteCommand" instead'
    arguments:
      - '@bdf_queue.failer'
    tags:
      - { name: 'console.command' }

  Bdf\Queue\Console\Command\Failer\DeleteCommand:
    class: 'Bdf\Queue\Console\Command\Failer\DeleteCommand'
    arguments:
      - '@bdf_queue.failer'
    tags:
      - { name: 'console.command' }

  bdf_queue.failer.retry_command:
    class: 'Bdf\Queue\Console\Command\Failer\RetryCommand'
    arguments:
      - '@bdf_queue.failer'
      - '@bdf_queue.destination_manager'
    tags:
      - { name: 'console.command' }

  bdf_queue.info_command:
    class: 'Bdf\Queue\Console\Command\InfoCommand'
    arguments:
      - '@bdf_queue.connection_factory'
    tags:
      - { name: 'console.command' }

  bdf_queue.bind_command:
    class: 'Bdf\Queue\Console\Command\BindCommand'
    arguments:
      - '@bdf_queue.connection_factory'
    tags:
      - { name: 'console.command' }

  bdf_queue.setup_command:
    class: 'Bdf\Queue\Console\Command\SetupCommand'
    arguments:
      - '@bdf_queue.destination_manager'
    tags:
      - { name: 'console.command' }

  bdf_queue.produce_command:
    class: 'Bdf\Queue\Console\Command\ProduceCommand'
    arguments:
      - '@bdf_queue.destination_manager'
    tags:
      - { name: 'console.command' }

  bdf_queue.consume_command:
    class: 'Bdf\Queue\Console\Command\ConsumeCommand'
    arguments:
      - '@bdf_queue.destination_manager'
      - '@bdf_queue.receiver.loader'
      - '@?logger'
    tags:
      - { name: 'console.command' }
      - { name: 'monolog.logger', channel: 'bdf_queue' }
